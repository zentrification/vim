:s/1/2/g - find/replace in visual block

:%!filter   - put whole file through filterput 
:!filterput - put (visual) selection through filterputput 
:,!command  - replace current line with command output


Yeah I stole all the ones below this
woop woop
---------

USE the . command
:h keyword (motion.txt) - Help

# Exuberant ctags
ctrl-] - takes you to the declaration of a keyword your cursor is currently over 
ctrl-t - takes you a step back in the tag stack
:tselelect - lists the tags that match its argument or keyword under the cursor
g] - works like the ctrl-] but lets you to choose the tag occurrence
:tnext, :tprevious, :tfirst and :tlast - jump through the tag occurrences
[i and ]i - display the first line containing the keyword under and after the cursor
[I and ]I - display all lines containing the keyword under and after the cursor

# Basic movement (all work with a count)
ge / gE - skip backwards at the ending of the words
; | , - repeat latest f, t, F, T in the normal | opposite direction

# Basic Editing
I - insert at begining of line
X - delete character before cursor

gv - reselects the latest visual selection

# Buffers
:ls[!] - list the buffers[including unlisted]
:b[no] / :[range/%]bd[name/id(s)] / :b# - switch to buffer [no] / [range:23,29/all]delete buffer / switch to the last buffer
:set modifiable - makes the buffer modifiable
:bn / :bp - go to next / previous buffer

# Arguments
:wn - moves to the next file in the arg list
:rewind / :n - rewind / go to next buffer
:bufdo {cmd} - repeat command for each buffer in the list

# Windows (:h windows)
CTRL + W, o - make it sole window by closing all other windows
CTRL + W, p - move to the previous window
:sp {file} / :vsp {file} - split file horizontally / vertically with current window
CTRL W, s / CTRL + W, v - split file horizontally / vertically with current window
CTRL + W, X - exchanges windows
CTRL + W, h / j / k / l - move carret to the window in the respective position
CTRL + W, H / J / K / L - move window to the respective position
CTRL + W, c - close the current window

# Session control (Saved in home directory)
:mksession [file.vim] - saves a session named file.vim
mvim -S ~/[file.vim] - launch vim with a session saved in file.vim (in terminal)

# searching
/ CTRL + P, CTRL + N - move through the search history while searching

# history
q/ - search history
q: - command history
q/ | q: - search string | command-line window

# commands
CTRL + f - change to command-line window during a command

# visual
gv - reselects the last selection

@: - repeat the previous command-line command
"= {expression}<CR> - caculate expression and put it in clipboard
"+{yank} - Yank in OS clipboard
u / U - While in visual mode, make text lowercase / uppercase
v[a or i][w | s | p | ( | " ...] - select a or inner word | sentence | paragraph | paranthesis text | quote text | ...
>> | << - indent highlighted code
:opt - view the list of options
Nread ftp://user@ftp.server.com - access ftp
:e! - revert to saved version of file
:vimgrep {keyword} ** - search for {keyword} in the current working directory (returned with pwd) # tips from http://vimcasts.org/episodes/how-to-use-tabs/
g; | g, - move cursor backwards | forward in the changelist to the position of the last edit
gq | gw - hard wrap {motion} and move cursor to the end of the selection | keep cursor where it was


# Terminal
:!{command} - execute terminal command 
:shell | exit - retarded terminal in vim | exit terminal

# Help
CTRL + ] / CTRL + T - jump to concept / back to hyperlink
